#!/bin/bash
set -eu

# adapted from https://github.com/johannes-wolf/cetz/blob/35c0868378cea5ad323cc0d9c2f76de8ed9ba5bd/scripts/package
# licensed under Apache License 2.0

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd -P)/.." # macOS 

TEMPLATE="$2"

if [[ -z "$TEMPLATE" ]]; then
  TEMPLATE="bachelor-thesis"
fi

if [[ ! -d "$ROOT/templates/$TEMPLATE" ]]; then
  echo "Template '$TEMPLATE' does not exist in '$ROOT/templates'."
  exit 1
fi

echo "Processing template $TEMPLATE"

# copy the current template typst.toml to the root directory
cp -a "$ROOT/templates/$TEMPLATE/typst.toml" "$ROOT"

. "$(dirname "${BASH_SOURCE[0]}")/setup" ${2}

TARGET="$(resolve-target "${1:?Missing target path, @local or @preview}")"
echo "Install dir: $TARGET"

# ignore rules
readarray -t ignores < <(grep -v '^#' .typstignore | grep '[^[:blank:]]')

# recursively print all files that are not excluded via .typstignore
function enumerate {
	local root="$1"
	if [[ -f "$root" ]]; then
		echo "$root"
	else
		local files
		readarray -t files < <(find "$root" \
      -mindepth 1 -maxdepth 1 \
      -not -name .git \
      -not -name .typstignore)
		# declare -p files >&2

		local f
		for f in "${files[@]}"; do
			local include
			include=1

			local ignore
			for ignore in "${ignores[@]}"; do
				if [[ "$ignore" =~ ^! ]]; then
					ignore="${ignore:1}"
					if [[ "$f" == ./$ignore ]]; then
						# echo "\"$f\" matched \"!$ignore\"" >&2
						include=1
					fi
				elif [[ "$f" == ./$ignore ]]; then
					# echo "\"$f\" matched \"$ignore\"" >&2
					include=0
				fi
			done
			if [[ "$include" == 1 ]]; then
				enumerate "$f"
			fi
		done
	fi
}

# List of all files that get packaged
readarray -t files < <(enumerate ".")
# declare -p files >&2

TMP="$(mktemp -d)"

for f in "${files[@]}"; do
  mkdir -p "$TMP/$(dirname "$f")" 2>/dev/null
  cp -r "$ROOT/$f" "$TMP/$f"  
done

cp $ROOT/src/*.pdf "$ROOT/examples/"

if [[ "$TEMPLATE" == "exec-summary" ]]; then
	echo "Removing useless files from template $TEMPLATE"
	rm -f "$TMP/src/report.typ"
	rm -f "$TMP/src/bachelor_thesis.typ"
	rm -f "$TMP/report_thumb.png"
	rm -f "$TMP/bachelor_thesis_thumb.png"
fi

if [[ "$TEMPLATE" == "bachelor-thesis" ]]; then
	echo "Removing report.typ from template $TEMPLATE"	
	rm -f "$TMP/src/exec_summary.typ"
	rm -f "$TMP/src/report.typ"
	rm -f "$TMP/src/figs/stormy_peters.jpg"
	rm -f "$TMP/report_thumb.png"
	rm -f "$TMP/exec_summary.png"
fi

if [[ "$TEMPLATE" == "report" ]]; then
	# remove the typst.toml in the template directory
	echo "Removing bachelor_thesis from template $TEMPLATE"
	rm -f "$TMP/src/bachelor_thesis.typ"
	rm -f "$TMP/src/exec_summary.typ"
	rm -f "$TMP/src/figs/stormy_peters.jpg"
	rm -f "$TMP/bachelor_thesis_thumb.png"
	rm -f "$TMP/exec_summary.png"
	rm -rf "$TMP/src/pages"
fi

TARGET="${TARGET:?}/${PKG_PREFIX:?}/${VERSION:?}"
echo "Packaged to: $TARGET"

if rm -r "${TARGET:?}" 2>/dev/null; then
  echo "Overwriting existing version."
fi
mkdir -p "$TARGET"

# include hidden files by setting dotglob
shopt -s dotglob
mv "$TMP"/* "$TARGET"

rm -r "$ROOT/typst.toml"